generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SchoolLogin {
  id            Int          @id @default(autoincrement())
  schoolName    String       @map("school_name") @db.VarChar(100)
  schoolEmail   String       @unique @map("school_email") @db.VarChar(100)
  schoolPassword String       @map("school_password")
  createdAt     DateTime     @default(now()) @map("created_at")
  teachers      Teacher[]
  lessonPdfs    LessonPdf[]

  @@map("school_logins")
}

model Teacher {
  id              Int       @id @default(autoincrement())
  schoolId        Int       @map("school_id")
  teacherName     String    @map("teacher_name") @db.VarChar(100)
  dob             DateTime? @db.Date
  email           String    @unique @db.VarChar(100)
  password        String
  experience      Int?
  qualification   String?   @db.VarChar(100)
  subjectAssigned String?   @map("subject_assigned") @db.VarChar(100)
  classAssigned   String?   @map("class_assigned") @db.VarChar(100)
  profileImage    String?   @map("profile_image")
  createdAt       DateTime  @default(now()) @map("created_at")
  school          SchoolLogin @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  timetable       Timetable?

  @@map("teachers")
}

model Timetable {
  id           Int      @id @default(autoincrement())
  teacherId    Int      @unique @map("teacher_id")
  monday       String[] @db.Text
  tuesday      String[] @db.Text
  wednesday    String[] @db.Text
  thursday     String[] @db.Text
  friday       String[] @db.Text
  saturday     String[] @db.Text
  periodsTime  String[] @map("periods_time") @db.Text
  createdAt    DateTime @default(now()) @map("created_at")
  teacher      Teacher  @relation(fields: [teacherId], references: [id], onDelete: Cascade)

  @@map("timetables")
}

model Class {
  id         Int         @id @default(autoincrement())
  name       String      @unique @db.VarChar(50)
  lessonPdfs LessonPdf[]

  @@map("classes")
}

model LessonPdf {
  id              Int         @id @default(autoincrement())
  lessonName      String      @map("lesson_name") @db.VarChar(100)
  pdfUrl          String      @map("pdf_url")
  classId         Int         @map("class_id")
  schoolId        Int?        @map("school_id")
  isForAllSchools Boolean     @default(false) @map("is_for_all_schools")
  createdAt       DateTime    @default(now()) @map("created_at")
  class           Class       @relation(fields: [classId], references: [id], onDelete: Cascade)
  school          SchoolLogin? @relation(fields: [schoolId], references: [id], onDelete: SetNull)

  @@map("lesson_pdfs")
}
